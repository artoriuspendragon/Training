<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.TrainingSystem.Biz.attendinfopeopleMapper">
  <resultMap id="BaseResultMap" type="com.TrainingSystem.Dto.attendinfopeople">
    <id column="attendinfopeople_attendID" jdbcType="INTEGER" property="attendID" />
    <result column="attendinfopeople_Charge" jdbcType="VARCHAR" property="charge" />
    <result column="attendinfopeople_Date" jdbcType="TIMESTAMP" property="date" />
    <result column="attendinfopeople_Teacher" jdbcType="VARCHAR" property="teacher" />
    <result column="attendinfopeople_AttendceMan" jdbcType="VARCHAR" property="attendceMan" />
  </resultMap>
  <sql id="Base_Column_List">
    attendinfopeople.attendID as attendinfopeople_attendID, attendinfopeople.Charge as attendinfopeople_Charge, 
    attendinfopeople.Date as attendinfopeople_Date, attendinfopeople.Teacher as attendinfopeople_Teacher, 
    attendinfopeople.AttendceMan as attendinfopeople_AttendceMan
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from attendinfopeople attendinfopeople
    where attendinfopeople.attendID = #{attendID,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from attendinfopeople
    where attendID = #{attendID,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.TrainingSystem.Dto.attendinfopeople">
    insert into attendinfopeople (attendID, Charge, Date, 
      Teacher, AttendceMan)
    values (#{attendID,jdbcType=INTEGER}, #{charge,jdbcType=VARCHAR}, #{date,jdbcType=TIMESTAMP}, 
      #{teacher,jdbcType=VARCHAR}, #{attendceMan,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.TrainingSystem.Dto.attendinfopeople">
    insert into attendinfopeople
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="attendID != null">
        attendID,
      </if>
      <if test="charge != null">
        Charge,
      </if>
      <if test="date != null">
        Date,
      </if>
      <if test="teacher != null">
        Teacher,
      </if>
      <if test="attendceMan != null">
        AttendceMan,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="attendID != null">
        #{attendID,jdbcType=INTEGER},
      </if>
      <if test="charge != null">
        #{charge,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="teacher != null">
        #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="attendceMan != null">
        #{attendceMan,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.TrainingSystem.Dto.attendinfopeople">
    update attendinfopeople
    <set>
      <if test="charge != null">
        Charge = #{charge,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        Date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="teacher != null">
        Teacher = #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="attendceMan != null">
        AttendceMan = #{attendceMan,jdbcType=VARCHAR},
      </if>
    </set>
    where attendID = #{attendID,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.TrainingSystem.Dto.attendinfopeople">
    update attendinfopeople
    set Charge = #{charge,jdbcType=VARCHAR},
      Date = #{date,jdbcType=TIMESTAMP},
      Teacher = #{teacher,jdbcType=VARCHAR},
      AttendceMan = #{attendceMan,jdbcType=VARCHAR}
    where attendID = #{attendID,jdbcType=INTEGER}
  </update>
</mapper>